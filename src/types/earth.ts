import {
  EclipticCoordinatesAtJulianDayWithEquinoxWithPrecisionFunction,
  EclipticCoordinatesAtJulianDayWithPrecisionFunction,
  EquatorialCoordinatesAtJulianDayWithObliquityWithPrecisionFunction,
  EquatorialCoordinatesAtJulianDayWithPrecisionFunction,
  QuantityAtJulianDayFunction,
  QuantityAtJulianDayWithPrecisionFunction,
  QuantityInArcSecondAtJulianDayWithPrecisionFunction,
  QuantityInAstronomicalUnitAtJulianDayWithPrecisionFunction,
  QuantityInDegreeAtJulianDayFunction,
  QuantityInDegreeAtJulianDayWithPrecisionFunction,
  SingleCoordinateDegreeAtJulianDayWithEquinoxWithPrecisionFunction
} from './funcs'

export enum Obliquity {
  Mean = 'Mean',
  True = 'True'
}

export enum Equinox {
  MeanOfTheDate = 'MeanOfTheDate',
  StandardJ2000 = 'StandardJ2000'
}

export interface NaturalMoon {
  getGeocentricElongation: QuantityInDegreeAtJulianDayWithPrecisionFunction
  getMeanLongitude: QuantityInDegreeAtJulianDayWithPrecisionFunction
  getMeanElongation: QuantityInDegreeAtJulianDayWithPrecisionFunction
  getMeanAnomaly: QuantityInDegreeAtJulianDayWithPrecisionFunction
  getArgumentOfLatitude: QuantityInDegreeAtJulianDayWithPrecisionFunction
  getGeocentricEclipticLongitude: QuantityInDegreeAtJulianDayWithPrecisionFunction
  getGeocentricEclipticLatitude: QuantityInDegreeAtJulianDayWithPrecisionFunction
  getGeocentricEclipticCoordinates: EclipticCoordinatesAtJulianDayWithPrecisionFunction
  getGeocentricEquatorialCoordinates: EquatorialCoordinatesAtJulianDayWithObliquityWithPrecisionFunction
  getApparentGeocentricEquatorialCoordinates: EquatorialCoordinatesAtJulianDayWithPrecisionFunction
  getRadiusVectorInKilometer: QuantityInAstronomicalUnitAtJulianDayWithPrecisionFunction
  radiusVectorToHorizontalParallax: Function
  horizontalParallaxToRadiusVector: Function
  getMeanLongitudeAscendingNode: QuantityInDegreeAtJulianDayWithPrecisionFunction
  getMeanLongitudePerigee: QuantityInDegreeAtJulianDayWithPrecisionFunction
  trueLongitudeOfAscendingNode: QuantityInDegreeAtJulianDayWithPrecisionFunction
  horizontalParallax: QuantityInDegreeAtJulianDayWithPrecisionFunction
  getPhaseAngle: QuantityInDegreeAtJulianDayWithPrecisionFunction
  getIlluminatedFraction: QuantityAtJulianDayWithPrecisionFunction
  getEquatorialHorizontalParallax: QuantityInDegreeAtJulianDayWithPrecisionFunction
  getGeocentricSemiDiameter: QuantityInArcSecondAtJulianDayWithPrecisionFunction
  getPositionAngleOfTheBrightLimb: QuantityInDegreeAtJulianDayWithPrecisionFunction
  getTimeOfMeanPhase: Function
  getAge: QuantityAtJulianDayFunction,
  getAgeName: Function
}

export interface NaturalEarth {
  getEclipticLongitude: SingleCoordinateDegreeAtJulianDayWithEquinoxWithPrecisionFunction
  getEclipticLongitudinalRotation: Function
  getEclipticLatitude: SingleCoordinateDegreeAtJulianDayWithEquinoxWithPrecisionFunction
  getEclipticCoordinates: EclipticCoordinatesAtJulianDayWithEquinoxWithPrecisionFunction
  getRadiusVector: QuantityInAstronomicalUnitAtJulianDayWithPrecisionFunction
  getFlatteningCorrections: Function
  getMeanAnomaly: QuantityAtJulianDayWithPrecisionFunction
  getEccentricity: QuantityAtJulianDayFunction
  getLongitudeOfPerihelion: QuantityInDegreeAtJulianDayFunction
  getNutationInLongitude: QuantityInArcSecondAtJulianDayWithPrecisionFunction
  getNutationInObliquity: QuantityInArcSecondAtJulianDayWithPrecisionFunction
  getMeanObliquityOfEcliptic: QuantityInDegreeAtJulianDayWithPrecisionFunction
  getTrueObliquityOfEcliptic: QuantityInDegreeAtJulianDayWithPrecisionFunction
  getEarthVelocity: Function
  getAccurateAnnualEquatorialAberration: Function
  getAnnualEclipticAberration: Function
  getAnnualEquatorialAberration: Function
  getNutationEquatorialAberration: Function
  Moon: NaturalMoon
}
