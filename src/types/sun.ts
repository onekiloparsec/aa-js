import { Kilometer } from './units'
import {
  EclipticCoordinatesAtJulianDayWithEquinoxWithPrecisionFunction,
  EclipticCoordinatesAtJulianDayWithPrecisionFunction,
  EquatorialCoordinatesAtJulianDayWithEquinoxWithPrecisionFunction,
  QuantityAtJulianDayWithPrecisionFunction,
  QuantityInDegreeAtJulianCenturyWithPrecisionFunction,
  QuantityInDegreeAtJulianDayFunction,
  QuantityInDegreeAtJulianDayWithPrecisionFunction,
  SingleCoordinateDegreeAtJulianDayWithEquinoxWithPrecisionFunction,
  SingleCoordinateDegreeAtJulianDayWithPrecisionFunction
} from './funcs'

export type SunConstants = {
  equatorialRadius: Kilometer
}

export interface NaturalSun {
  getMeanAnomaly: QuantityAtJulianDayWithPrecisionFunction
  getTrueAnomaly: QuantityAtJulianDayWithPrecisionFunction
  getEquationOfTheCenter: Function
  getMeanLongitudeReferredToMeanEquinoxOfDate: QuantityInDegreeAtJulianCenturyWithPrecisionFunction
  getGeometricEclipticLongitude: QuantityInDegreeAtJulianDayWithPrecisionFunction
  getGeocentricEclipticLongitude: SingleCoordinateDegreeAtJulianDayWithEquinoxWithPrecisionFunction
  getGeocentricEclipticLatitude: SingleCoordinateDegreeAtJulianDayWithEquinoxWithPrecisionFunction
  getGeometricFK5EclipticLongitude: SingleCoordinateDegreeAtJulianDayWithEquinoxWithPrecisionFunction
  getGeometricFK5EclipticLatitude: SingleCoordinateDegreeAtJulianDayWithEquinoxWithPrecisionFunction
  getGeocentricEclipticCoordinates: EclipticCoordinatesAtJulianDayWithEquinoxWithPrecisionFunction
  getGeocentricEquatorialCoordinates: EquatorialCoordinatesAtJulianDayWithEquinoxWithPrecisionFunction
  getApparentGeocentricEclipticLongitude: SingleCoordinateDegreeAtJulianDayWithPrecisionFunction
  getApparentGeocentricEclipticLatitude: SingleCoordinateDegreeAtJulianDayWithPrecisionFunction
  getApparentGeocentricEclipticCoordinates: EclipticCoordinatesAtJulianDayWithPrecisionFunction
  getVariationGeometricEclipticLongitude: QuantityInDegreeAtJulianDayFunction,
  constants: SunConstants
}
